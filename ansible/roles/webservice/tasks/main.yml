---
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/dnf_module.html
- name: Install the latest version of podman, skopeo, httpd-tools and openssl
  ansible.builtin.dnf:
    name: "{{ packages }}"
    state: latest

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/tempfile_module.html
- name: Create webserver temporary directory
  ansible.builtin.file:
    path: "{{ webserver_path }}"
    state: directory
  register: webservertemp

# https://docs.ansible.com/ansible/latest/collections/community/general/htpasswd_module.html
- name: Add a user to a password file and ensure permissions are set
  community.general.htpasswd:
    path: "{{ webserver_path }}/.creds"
    name: "{{ username }}"
    password: "{{ password }}"
    owner: root
    group: root
    mode: 0664

# https://docs.ansible.com/ansible/latest/collections/community/crypto/openssl_privatekey_module.html
- name: Generate an OpenSSL private RSA key
  community.crypto.openssl_privatekey:
    path: "{{ webserver_path }}/{{ server_hostname }}.key"
    size: "{{ key_size }}"
    passphrase: "{{ passphrase }}"
    cipher: auto
    type: "{{ key_type }}"
    mode: 0600
  register: privatekey

# https://docs.ansible.com/ansible/latest/collections/community/crypto/openssl_csr_module.html
- name: Generate an OpenSSL Certificate Signing Request with Subject information
  community.crypto.openssl_csr:
    path: "{{ webserver_path }}/{{ server_hostname }}.csr"
    privatekey_path: "{{ webserver_path }}/{{ server_hostname }}.key"
    country_name: "ES"
    state_or_province_name: "León"
    locality_name: "León"
    organization_name: "DevOps"
    organizational_unit_name: "DevOps Unir"
    common_name: "{{ server_hostname }}"
    mode: 0664
  register: csr
  when: privatekey is defined

# https://docs.ansible.com/ansible/latest/collections/community/crypto/x509_certificate_module.html
- name: Generate a Self Signed OpenSSL certificate
  community.crypto.x509_certificate:
    path: "{{ webserver_path }}/{{ server_hostname }}.crt"
    privatekey_path: "{{ webserver_path }}/{{ server_hostname }}.key"
    csr_path: "{{ webserver_path }}/{{ server_hostname }}.csr"
    provider: selfsigned
    selfsigned_not_after: "+365d"
    mode: 0664
  when: csr is defined

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_module.html
# https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_loops.html
- name: Copy container files in webserver temporary directory
  ansible.builtin.template:
    src: "{{ item.src_path }}/{{ item.file_name }}.j2"
    dest: "{{ webserver_path }}/{{ item.file_name }}"
    owner: root
    group: root
    mode: 0664
  loop: "{{ container_templates }}"

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/copy_module.html
- name: Copy container files in webserver temporary directory
  ansible.builtin.copy:
    src: "{{ item.src_path }}/{{ item.file_name }}"
    dest: "{{ webserver_path }}/{{ item.file_name }}"
    owner: root
    group: root
    mode: 0664
  loop: "{{ container_files }}"

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_image_module.html
- name: Build a podman image for webserver/httpd
  containers.podman.podman_image:
    name: webserver
    path: "{{ webserver_path }}"
    build:
      cache: no
      force_rm: yes
      format: oci
      annotation:
        app: webserver
        function: webserver
        info: httpd webserver with credentials
    tag: "{{ tag_image }}"
  register: wsimage

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_image_module.html
- name: Pull an image webserver/httpd
  containers.podman.podman_image:
    name: "localhost/webserver:{{ tag_image }}"

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_tag_module.html
#- containers.podman.podman_tag:
#    image: localhost/webserver
#    target_names:
#      - "{{ tag_image }}"
#  when: wsimage is defined

# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_container_module.html
- name: Create a webserver/httpd container with systemd service file generated
  containers.podman.podman_container:
    name: web
    image: "localhost/webserver:{{ tag_image }}"
    state: started
    recreate: yes
    expose:
      - 8080
    publish:
      - 8080:443
    generate_systemd:
      path: "{{ container_web_service }}"
      restart_policy: always
      time: 60
      names: true
      container_prefix: "{{ container_prefix }}"

# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/file_module.html
- name: Remove the webserver temporary directory
  ansible.builtin.file:
    path: "{{ webservertemp.path }}"
    state: absent
  when: webservertemp1.path is defined
...